{"version":3,"sources":["utils/utils.js","App.js","index.js"],"names":["itemsFromBackend","id","uuidv4","content","columnsFromBackend","name","items","setDefaultItem","savedItem","columnsFromLocalStorege","localStorage","getItem","JSON","parse","getItems","onDragEnd","result","columns","setColumns","a","destination","source","droppableId","sourceColumn","destColumn","sourceItems","destItems","splice","index","removed","column","copiedItems","App","defaultItems","useState","useEffect","columnsUser","stringify","setItem","setItems","style","display","justifyContent","height","flexWrap","Object","entries","map","flexDirection","alignItems","key","margin","provided","snapshot","droppableProps","ref","innerRef","background","isDraggingOver","padding","width","minHeight","item","draggableId","draggableProps","dragHandleProps","userSelect","backgroundColor","isDragging","color","placeholder","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16043f44.chunk.js","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\n\nexport const setItems = (columns) => {\n  const columnsUser = JSON.stringify(columns);\n  localStorage.setItem(\"columns\", columnsUser);\n};\n\nexport const getItems = () => {\n  const columnsFromLocalStorege = localStorage.getItem(\"columns\");\n  const columns = JSON.parse(columnsFromLocalStorege);\n  return columns;\n};\n\nconst itemsFromBackend = [\n  { id: uuidv4(), content: \"First\" },\n  { id: uuidv4(), content: \"Second\" },\n  { id: uuidv4(), content: \"Third\" },\n  { id: uuidv4(), content: \"Fourth\" },\n  { id: uuidv4(), content: \"Fifth\" },\n  { id: uuidv4(), content: \"Sixth\" },\n  { id: uuidv4(), content: \"Seventh\" },\n];\n\nconst columnsFromBackend = {\n  [uuidv4()]: { name: \"Cash Offer\", items: [] },\n  [uuidv4()]: { name: \"Finance\", items: [] },\n  [uuidv4()]: { name: \"Lease\", items: [] },\n  [uuidv4()]: { name: \"Other\", items: itemsFromBackend },\n};\n\nexport const setDefaultItem = () => {\n  const savedItem = getItems();\n  let defaultItems = savedItem ? savedItem : columnsFromBackend;\n  return defaultItems;\n};\n\nexport const onDragEnd = async (result, columns, setColumns) => {\n  if (!result.destination) return;\n  const { source, destination } = result;\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: { ...sourceColumn, items: sourceItems },\n      [destination.droppableId]: { ...destColumn, items: destItems },\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: { ...column, items: copiedItems },\n    });\n  }\n};\n","import React, { useState, useEffect } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { setItems, setDefaultItem, onDragEnd } from \"./utils/utils\";\r\n\r\nfunction App() {\r\n  let defaultItems = setDefaultItem();\r\n  const [columns, setColumns] = useState(defaultItems);\r\n  useEffect(() => {\r\n    setItems(columns);\r\n  });\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        height: \"100%\",\r\n        flexWrap: \"wrap\",\r\n      }}\r\n    >\r\n      <DragDropContext\r\n        onDragEnd={(result) => onDragEnd(result, columns, setColumns)}\r\n      >\r\n        {Object.entries(columns).map(([id, column]) => {\r\n          return (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n              }}\r\n              key={id}\r\n            >\r\n              <h2>{column.name}</h2>\r\n              <div style={{ margin: 8 }}>\r\n                <Droppable droppableId={id} key={id} style={{ margin: 8 }}>\r\n                  {(provided, snapshot) => {\r\n                    return (\r\n                      <div\r\n                        {...provided.droppableProps}\r\n                        ref={provided.innerRef}\r\n                        style={{\r\n                          background: snapshot.isDraggingOver\r\n                            ? \"lightblue\"\r\n                            : \"lightgrey\",\r\n                          padding: 4,\r\n                          width: 250,\r\n                          minHeight: 500,\r\n                        }}\r\n                      >\r\n                        {column.items.map((item, index) => {\r\n                          return (\r\n                            <Draggable\r\n                              key={item.id}\r\n                              draggableId={item.id}\r\n                              index={index}\r\n                            >\r\n                              {(provided, snapshot) => {\r\n                                return (\r\n                                  <div\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.draggableProps}\r\n                                    {...provided.dragHandleProps}\r\n                                    style={{\r\n                                      userSelect: \"none\",\r\n                                      padding: 16,\r\n                                      margin: \"0 0 8px 0\",\r\n                                      minHeight: \"30px\",\r\n                                      backgroundColor: snapshot.isDragging\r\n                                        ? \"#263B4A\"\r\n                                        : \"#456C86\",\r\n                                      color: \"white\",\r\n                                      ...provided.draggableProps.style,\r\n                                    }}\r\n                                  >\r\n                                    {item.content}\r\n                                  </div>\r\n                                );\r\n                              }}\r\n                            </Draggable>\r\n                          );\r\n                        })}\r\n                        {provided.placeholder}\r\n                      </div>\r\n                    );\r\n                  }}\r\n                </Droppable>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}